services:
  redis1:
    image: redis:latest
    container_name: redis1
    ports:
      - "6379:6379"
    volumes:
      - ./redis-node1.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --maxmemory-policy noeviction
    networks:
      ipv4_network:
        ipv4_address: 172.18.0.31
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis2:
    image: redis:latest
    container_name: redis2
    ports:
      - "6380:6379"
    volumes:
      - ./redis-node2.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --maxmemory-policy noeviction
    networks:
      ipv4_network:
        ipv4_address: 172.18.0.32
    restart: unless-stopped

  redis3:
    image: redis:latest
    container_name: redis3
    ports:
      - "6381:6379"
    volumes:
      - ./redis-node3.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf --cluster-enabled yes --maxmemory-policy noeviction
    networks:
      ipv4_network:
        ipv4_address: 172.18.0.33
    restart: unless-stopped

  redis-init:
    image: redis:latest
    ports:
      - "6382:6379"
    depends_on:
      redis1:
        condition: service_healthy
    command: >
      sh -c "sleep 20 && echo 'yes' | redis-cli --cluster create 172.18.0.31:6379 172.18.0.32:6380 172.18.0.33:6381 --cluster-replicas 0"
    networks:
      ipv4_network:
        ipv4_address: 172.18.0.34
    restart: unless-stopped

networks:
  ipv4_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
volumes:
  db_data: {}
